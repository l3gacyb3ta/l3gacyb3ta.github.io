name: AUTOBUILD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - uses: actions/checkout@v3
    - uses: actions/configure-pages@v3
    - uses: actions/cache@v4
      id: cache-media-restore
      with:
        path: |
          data/media/*
        key: media-cache-${{ hashFiles('data/original_media/*') }}
    - name: install imagemagick
      if: steps.cache-media-restore.outputs.cache-hit != 'true'
      uses: mfinelli/setup-imagemagick@v6
    - name: media creation
      if: steps.cache-media-restore.outputs.cache-hit != 'true'
      run: ./batchVariants.sh
    - name: cache media
      if: steps.cache-media-restore.outputs.cache-hit != 'true'
      id: cache-media-save
      uses: actions/cache/save@v4
      with:
        path: |
          data/media/*
        key: media-cache-${{ hashFiles('data/original_media/*') }}
    - name: create folders
      run: mkdir bin out out/links out/media
    - name: copy data
      run: cp -r data/media/* out/media && cp -r data/links/* out/links
    - name: compile
      run: cc src/main.c -g -O0 -std=c89 -Wall -Wno-unknown-pragmas -o bin/aethopica 
    - name: build site
      run: cd data && ../bin/aethopica
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './out/'
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
